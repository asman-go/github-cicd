name: Test work with secrets github

on:
  workflow_dispatch:
    inputs:
      secret_key:
        default: TEST_SECRET_KEY
        description: Name of a secret
        type: string
        required: true
      secret_value:
        default: TEST_SECRET_VALUE
        description: Value of a secret
        type: string
        required: true

jobs:
  update-secret:
    name: Update a Github secret value
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 20
      - run: |
          npm install --global tweetsodium
          echo "NODE_PATH=$(npm root -g)" >> $GITHUB_ENV
      - name: Update secret value
        uses: actions/github-script@v7
        env:
          SECRET_KEY: ${{ inputs.secret_key }}
          SECRET_VALUE: ${{ inputs.secret_value }}
        with:
          result-encoding: string
          script: |
              const sodium = require('tweetsodium');
              const { data: {key: publicKey, key_id: keyId} } = await github.rest.actions.getRepoPublicKey({...context.repo});
              if (publicKey) {
                const keyBytes = Buffer.from(publicKey, 'base64');
                const messageBytes = Buffer.from(process.env.SECRET_VALUE);
                const encryptedBytes = sodium.seal(messageBytes, keyBytes);

                // Base64 the encrypted secret
                const encrypted = Buffer.from(encryptedBytes).toString('base64');

                await github.rest.actions.createOrUpdateOrgSecret({
                  ...context.repo, 
                  secret_name: process.env.SECRET_KEY,
                  encrypted_value: encrypted,
                  key_id: keyId,
                });
              } else {
                core.error('Failed to fetch the public key. Unable to update secret');
              }
